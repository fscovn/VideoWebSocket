/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   ml_server.h
 * Author: ubuntu
 *
 * Created on May 14, 2020, 3:11 PM
 */

#ifndef ML_SERVER_H
#define ML_SERVER_H
#include <cstdlib>
#include <websocketpp/config/asio_no_tls.hpp>
#include <websocketpp/server.hpp>
#include <rapidjson/document.h>
#include <boost/filesystem.hpp>
#include <rapidjson/document.h>
#include <rapidjson/writer.h>
#include <rapidjson/stringbuffer.h>
#include "string_util.h"
#include "base64.h"
#include "vs_processing.h"
#include "vs_config.h"
using namespace cv;
using websocketpp::lib::placeholders::_1;
using websocketpp::lib::placeholders::_2;
using websocketpp::lib::bind;

typedef websocketpp::server<websocketpp::config::asio> server;
typedef server::message_ptr message_ptr;
typedef std::set<websocketpp::connection_hdl, std::owner_less<websocketpp::connection_hdl>> con_list;
using namespace rapidjson;

const int GET_VIDEO_INFO = 0;
const int GET_FRAME_DATA = 1;
const string EOF_VIDEO_DATA = "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCAFyAmwDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+f+iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoora8EeDdZ+InjPSvAXhyTT01DWtQhsrFtW1i20+2Esrqiebc3UkcFum48yyuiKOWZRQBi0V9zwf8G4X/AAWMufBMHxKs/wBlvRJfDd1DHPa+II/jB4TNlNE7BUdJ/wC1NhViQAwb5siuC/aE/wCCJv8AwVO/Zb8Ay/Ff4y/sZeJbfwxbWpubzxBoNzaa3Z21uo3NPLNps06RRY/jchfegD5Vor0z9kL9mTx9+2X+0z4K/Zb+GVzZ2+teNddh020vL9mEForZMlxKVBby4ow8jbQTtQ4FfovJ/wAGtuu+NrTwx8bv2cf+Ch/w3+I/wGuo7uTx/wDF/RLaKL/hEYbWGSW5nlsnvMXCJs24ScS5bLoifPQB+TlFSSiNJCsRLJu+ViuCRX39/wAESf8Agij4A/4LIp418OQftgaj8O/FPgtobq60t/homrWdxp82FimS5/tO3ZZfNWZWiMO1VRGEjb2VAD8/aK6345fDRfgz8avGPwd/tn+0v+EU8U6ho39pC28n7V9muZIPN8vc3l7tm7bubGcZPWuo/Yz/AGQPjJ+3T+0V4f8A2a/gZo63Os65cE3F9dNstNJs0+a4v7qT/llbwpud29gBuZlUgHlVFfqt8RP+CDH7Dn7P+m/8NOeJP+Cn1r8Z/gJ4Nnv7T4vap8GPDkX9vaNqCJssLKGOOe/hQXNwdn2u48uBMDLHzUavzG+IVx8Prvxxq118J9G1jT/DT30h0Ox8Q6pFe30Fru/dieeGGCOWTb1ZIkXPRaAMKiiigAoor7r/AGHf+CIni/8AbY/4Jr/GL/goppP7S/hjw3bfCn+0ivhL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";
class vs_server {
public:    
    vs_server(vs_config *cfg);
    virtual ~vs_server();    
    void start_listen();
    string get_socket_key(websocketpp::connection_hdl hdl);

    static void on_message(vs_server* s, websocketpp::connection_hdl hdl, message_ptr msg);
    void send_to_all_clients(server *s, string data);
    static void on_open(vs_server* s, websocketpp::connection_hdl hdl);
    static void on_close(vs_server* s, websocketpp::connection_hdl hdl);
    
    void add_client(websocketpp::connection_hdl hdl){
        client_connections.insert(hdl);
    };
    
    void remove_client(websocketpp::connection_hdl hdl){
        client_connections.erase(hdl);
    };
    
    void close_client(websocketpp::connection_hdl hdl, uint16_t code, string msg){
        ws_server.close(hdl, code, msg);
    }
    
    server::connection_ptr get_con_from_hdl(websocketpp::connection_hdl hdl){
        return ws_server.get_con_from_hdl( hdl );
    }
    
    void send(websocketpp::connection_hdl hdl, string content, websocketpp::frame::opcode::value code){
        ws_server.send(hdl, content, code);
    }
    
    void pause_reading(websocketpp::connection_hdl hdl){
        ws_server.pause_reading(hdl);
    }
    
    static string create_frame_response(vs_server* s, VideoCapture videoCapture);
    static string create_info_response(VideoCapture videoCapture){
        long frame_count = vs_processing::get_video_frame_count(videoCapture);
        return create_response_data(GET_VIDEO_INFO, frame_count, "");
    }
    
    string get_frame_content(VideoCapture videoCapture);
    static string create_response_data(int code, long idx, string data){
        StringBuffer strbuf;
        Writer<StringBuffer> writer(strbuf);
        writer.StartObject();
        writer.Key("code");
        writer.Int(code);
        writer.Key("idx");
        writer.Int64(idx);
        writer.Key("data");
        writer.String(data.c_str());
        writer.EndObject();
        string jsonContent = strbuf.GetString();
        return jsonContent;
    };
    
private:
    server ws_server;
    con_list client_connections;
    vs_config *config;
    map<string, VideoCapture> client_video_captures;
    map<string, int> client_frame_index;
    
    
};

#endif /* ML_SERVER_H */

